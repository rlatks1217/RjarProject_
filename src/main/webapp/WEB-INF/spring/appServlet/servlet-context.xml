<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.rjar.www.*" />
	
	<!-- Jakcson 설정 -->
	<!-- @ResponseBody 어노테이션을 사용하지 않고, MappingJackson2JsonView(이하 JsonView)를 -->
	<!-- Bean으로 등록하여 Model에 심어진 키-값을 JSON으로 변환할 경우 설정합니다. -->
	<!-- JsonView를 사용하기 위해서는 BeanNameViewResolver를 빈으로 등록하여야 합니다. -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"> 
		<beans:property name="order" value="0"/> 
	</beans:bean>
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=UTF-8" />
	</beans:bean>
	
	<interceptors>
		<interceptor>
			<!-- mapping의 모든 요청은 Controller에 도착하기 전에 가로챈다 -->
<!-- 			<mapping path="/myPage" /> -->
<!-- 			로그인 안 돼있으면 마이페이지 접근 불가 -->
			<mapping path="/myPage" />
			<!-- exclude-mapping은 요청을 가로채지 않는다. -->
			<beans:bean class="com.rjar.www.userClass.SessionInterceptor"/>
		</interceptor>
		
		<interceptor>
			<!-- mapping의 모든 요청은 Controller에 도착하기 전에 가로챈다 -->
<!-- 			로그인 되어있으면 회원가입 페이지 접근 불가 -->
			<mapping path="/login" />
			<mapping path="/join" />
			<mapping path="/join2" />
			<mapping path="/join3" />
			<beans:bean class="com.rjar.www.userClass.JoinInterceptor"/>
		</interceptor>
		
<!-- 		특정 페이지 캐시 만료시킴 -->
		 <interceptor>
<!-- 		 <mapping path="/join"/> -->
		 <mapping path="/join3"/>
<!-- 		 <mapping path="/myPage"/> -->
		 <beans:bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
		 <beans:property name="cacheSeconds" value="0"/>
		
		 <beans:property name="useCacheControlHeader" value="true"/>
		 <beans:property name="useCacheControlNoStore" value="true"/>
		</beans:bean>
		</interceptor>
	</interceptors>
	
</beans:beans>
